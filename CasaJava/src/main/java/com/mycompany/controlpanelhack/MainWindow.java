/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.controlpanelhack;

import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.JsonNode;
import com.mashape.unirest.http.Unirest;
import com.mashape.unirest.http.exceptions.UnirestException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.json.JSONArray;

/**
 *
 * @author VSery
 */
public class MainWindow extends javax.swing.JFrame {

    public static ArrayList<Entity> entities;

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        microondas = new javax.swing.JToggleButton();
        microondas1 = new javax.swing.JToggleButton();
        microondas2 = new javax.swing.JToggleButton();
        microondas3 = new javax.swing.JToggleButton();
        microondas4 = new javax.swing.JToggleButton();
        microondas5 = new javax.swing.JToggleButton();
        microondas6 = new javax.swing.JToggleButton();
        microondas7 = new javax.swing.JToggleButton();
        microondas8 = new javax.swing.JToggleButton();
        microondas9 = new javax.swing.JToggleButton();
        microondas10 = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        microondas.setSelected(true);
        microondas.setText("Microondas");
        microondas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                microondasActionPerformed(evt);
            }
        });

        microondas1.setSelected(true);
        microondas1.setText("Horno");
        microondas1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hornoActionPerformed(evt);
            }
        });

        microondas2.setSelected(true);
        microondas2.setText("Ordenador Papa");
        microondas2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ordenadorPapaActionPerformed(evt);
            }
        });

        microondas3.setSelected(true);
        microondas3.setText("Nevera");
        microondas3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                neveraActionPerformed(evt);
            }
        });

        microondas4.setSelected(true);
        microondas4.setText("Router");
        microondas4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                routerActionPerformed(evt);
            }
        });

        microondas5.setSelected(true);
        microondas5.setText("Fogon 1");
        microondas5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fogon1ActionPerformed(evt);
            }
        });

        microondas6.setSelected(true);
        microondas6.setText("Estufa Salon");
        microondas6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estufaSalonActionPerformed(evt);
            }
        });

        microondas7.setSelected(true);
        microondas7.setText("Lavadora");
        microondas7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lavadoraActionPerformed(evt);
            }
        });

        microondas8.setSelected(true);
        microondas8.setText("Lavavajillas");
        microondas8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lavavajillasActionPerformed(evt);
            }
        });

        microondas9.setSelected(true);
        microondas9.setText("Cargador Movil Mama");
        microondas9.setToolTipText("");
        microondas9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargadorMovilMamaActionPerformed(evt);
            }
        });

        microondas10.setSelected(true);
        microondas10.setText("Exprimidor");
        microondas10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exprimidorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(microondas)
                    .addComponent(microondas5)
                    .addComponent(microondas6)
                    .addComponent(microondas7)
                    .addComponent(microondas8)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(microondas3)
                                .addComponent(microondas4))
                            .addGap(213, 213, 213))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(microondas1)
                                .addComponent(microondas2))
                            .addGap(82, 82, 82)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(microondas9)
                                .addComponent(microondas10)))))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(microondas)
                    .addComponent(microondas9))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(microondas1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(microondas2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(microondas10)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(microondas3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(microondas4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(microondas5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(microondas6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(microondas7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(microondas8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void microondasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_microondasActionPerformed
        try {
            changeStatus("Microondas", entities);
        } catch (UnirestException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_microondasActionPerformed

    private void hornoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hornoActionPerformed
        try {
            changeStatus("Horno", entities);
        } catch (UnirestException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_hornoActionPerformed

    private void ordenadorPapaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordenadorPapaActionPerformed
        try {
            changeStatus("Ordenador Papa", entities);
        } catch (UnirestException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ordenadorPapaActionPerformed

    private void neveraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_neveraActionPerformed
        try {
            changeStatus("Nevera", entities);
        } catch (UnirestException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_neveraActionPerformed

    private void routerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_routerActionPerformed
        try {
            changeStatus("Router", entities);
        } catch (UnirestException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_routerActionPerformed

    private void fogon1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fogon1ActionPerformed
        try {
            changeStatus("Fogon 1", entities);
        } catch (UnirestException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_fogon1ActionPerformed

    private void estufaSalonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estufaSalonActionPerformed
        try {
            changeStatus("Estufa Salon", entities);
        } catch (UnirestException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_estufaSalonActionPerformed

    private void lavadoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lavadoraActionPerformed
        try {
            changeStatus("Lavadora", entities);
        } catch (UnirestException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_lavadoraActionPerformed

    private void lavavajillasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lavavajillasActionPerformed
        try {
            changeStatus("Lavavajillas", entities);
        } catch (UnirestException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_lavavajillasActionPerformed

    private void cargadorMovilMamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargadorMovilMamaActionPerformed
        try {
            changeStatus("Cargador Movil Mama", entities);
        } catch (UnirestException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cargadorMovilMamaActionPerformed

    private void exprimidorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exprimidorActionPerformed
        try {
            changeStatus("Exprimidor", entities);
        } catch (UnirestException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_exprimidorActionPerformed

    public static void updateObjects(ArrayList<Entity> e) throws UnirestException {
        Unirest.setDefaultHeader("Content-Type", "application/json");
        Unirest.setDefaultHeader("Accept", "application/json");
        Unirest.setDefaultHeader("Fiware-Service", "todosincluidos");
        Unirest.setDefaultHeader("Fiware-ServicePath", "/iot");
        Unirest.setDefaultHeader("X-Auth-Token", "25069ba02efb4e5293f8e3f1e9fe7d81");
        HttpResponse<JsonNode> jsonResponse = Unirest.get("http://hackathon.ttcloud.net:10026/v1/contextEntities/7WLFOO").asJson();
        JSONArray attributes = jsonResponse.getBody().getObject().getJSONObject("contextElement").getJSONArray("attributes");
        int i = 0;
        for (i = 0; i < attributes.length(); i++) {
            if (attributes.getJSONObject(i).getString("name").equals("kwh")) {
                break;
            }
        }
        JSONArray dispositives = attributes.getJSONObject(i).getJSONArray("value");
        for (int j = 0; j < dispositives.length(); j++) {
            String name = dispositives.getJSONObject(j).getString("name");
            int index = entities.indexOf(new Entity(name, "", true));
            double value = Double.valueOf(dispositives.getJSONObject(j).getString("value"));
            if (value < 0.000000000001) {
                entities.get(index).setStatus(false);
            } else {
                entities.get(index).setStatus(true);
            }
        }
    }

    public static void initValues(ArrayList<Entity> e) throws UnirestException {
        Unirest.setDefaultHeader("Content-Type", "application/json");
        Unirest.setDefaultHeader("Accept", "application/json");
        Unirest.setDefaultHeader("Fiware-Service", "todosincluidos");
        Unirest.setDefaultHeader("Fiware-ServicePath", "/iot");
        StringBuilder response = new StringBuilder();
        response.append("{\n"
                + "    \"type\": \"dispositives\",\n"
                + "    \"value\": [\n");
        for (Entity i : e) {
            response.append("        {   \"name\":\"" + i.getName() + "\",\n"
                    + "            \"type\":\"float\",\n"
                    + "            \"value\":\"" + i.getValue() + "\",\n"
                    + "            \"metadatas\":[\n"
                    + "                          {\n"
                    + "                            \"name\": \"status\",\n"
                    + "                            \"type\": \"boolean\",\n"
                    + "                            \"value\": \"" + i.isStatus() + "\"\n"
                    + "                          }\n"
                    + "            ]"
                    + "},");
        }
        response.setLength(response.length() - 1);
        response.append("]\n"
                + "}");
        HttpResponse<JsonNode> jsonResponse = Unirest.post("http://hackathon.ttcloud.net:10026/v1/contextEntities/7WLFOO/attributes/kwh")
                .header("accept", "application/json")
                .body(response.toString()).asJson();

    }

    public static void changeStatus(String s, ArrayList<Entity> l) throws UnirestException {
        updateObjects(l);
        Unirest.setDefaultHeader("Content-Type", "application/json");
        Unirest.setDefaultHeader("Accept", "application/json");
        Unirest.setDefaultHeader("Fiware-Service", "todosincluidos");
        Unirest.setDefaultHeader("Fiware-ServicePath", "/iot");
        StringBuilder response = new StringBuilder();
        response.append("{\n"
                + "    \"type\": \"dispositives\",\n"
                + "    \"value\": [");
        for (Entity i : l) {
            response.append("        {   \"name\":\"" + i.getName() + "\",\n"
                    + "            \"type\":\"float\",\n");
            response.append("            \"value\":\"" + i.getValue() + "\",\n");
            if (i.getName().equals(s)) {
                i.setStatus(!i.isStatus());
            };
            response.append("            \"metadatas\":[\n"
                    + "                          {\n"
                    + "                            \"name\": \"status\",\n"
                    + "                            \"type\": \"boolean\",\n"
                    + "                            \"value\": \"" + i.isStatus() + "\"\n"
                    + "                          }\n"
                    + "            ]"
                    + "},");
        }
        response.setLength(response.length() - 1);
        response.append("]\n"
                + "}");
        System.out.println(response);
        HttpResponse<JsonNode> jsonResponse = Unirest.post("http://hackathon.ttcloud.net:10026/v1/contextEntities/7WLFOO/attributes/kwh")
                .header("accept", "application/json")
                .body(response.toString()).asJson();

        System.out.println(jsonResponse.getBody().toString());
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        try {
            //</editor-fold>
            entities = new ArrayList<Entity>();
            entities.add(new Entity("Microondas", "0.640", true));
            entities.add(new Entity("Horno", "0.790", true));
            entities.add(new Entity("Ordenador Papa", "0.120", true));
            entities.add(new Entity("Nevera", "0.890", true));
            entities.add(new Entity("Router", "0.01012", true));
            entities.add(new Entity("Fogon 1", "1.2", true));
            entities.add(new Entity("Estufa Salon", "2", true));
            entities.add(new Entity("Lavadora", "0.350", true));
            entities.add(new Entity("Lavavajillas", "0.980", true));
            entities.add(new Entity("Exprimidor", "0.035", true));
            entities.add(new Entity("Cargador Movil Mama", "0.004", true));
            initValues(entities);
        } catch (UnirestException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton microondas;
    private javax.swing.JToggleButton microondas1;
    private javax.swing.JToggleButton microondas10;
    private javax.swing.JToggleButton microondas2;
    private javax.swing.JToggleButton microondas3;
    private javax.swing.JToggleButton microondas4;
    private javax.swing.JToggleButton microondas5;
    private javax.swing.JToggleButton microondas6;
    private javax.swing.JToggleButton microondas7;
    private javax.swing.JToggleButton microondas8;
    private javax.swing.JToggleButton microondas9;
    // End of variables declaration//GEN-END:variables
}
